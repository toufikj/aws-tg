#!/bin/bash
set -e

LOG_FILE="/var/log/user_data.log"
exec > >(tee -a $LOG_FILE) 2>&1

echo "[+] Starting user_data script"

# Install Java and AWS CLI
sudo apt-get update -y
sudo apt-get install unzip openjdk-21-jdk-headless maven -y
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

# Clone and upload static assets
if [ -n "${github_token}" ]; then
  git clone https://${github_token}@${static_repo_url} ${static_repo_dir}
else
  git clone https://${static_repo_url} ${static_repo_dir}
fi

# Create S3 bucket if it doesn't exist
echo "[+] Creating S3 bucket if it doesn't exist"
aws s3api create-bucket --bucket ${s3_bucket_name} --region ${aws_region} --create-bucket-configuration LocationConstraint=${aws_region} || echo "Bucket may already exist"

aws s3 cp ${static_repo_dir}/ s3://${s3_bucket_name}/static/ --recursive

# Clone and deploy project repo
if [ -n "${github_token}" ]; then
  git clone https://${github_token}@${project_repo_url} ${project_repo_dir}
else
  git clone https://${project_repo_url} ${project_repo_dir}
fi


# Configure shutdown script to upload logs
echo "[+] Configuring shutdown script to upload logs"
cat <<-SHUTDOWN > /etc/systemd/system/upload-logs.service
[Unit]
Description=Upload logs to S3 on shutdown
DefaultDependencies=no
Before=shutdown.target

[Service]
Type=oneshot
ExecStart=/bin/bash -c 'aws s3 cp /var/log/cloud-init.log s3://${s3_bucket_name}/logs/cloud-init.log && aws s3 cp /var/log/user_data.log s3://${s3_bucket_name}/logs/user_data.log'

[Install]
WantedBy=shutdown.target
SHUTDOWN

chmod +x /etc/systemd/system/upload-logs.service
systemctl enable upload-logs.service

# Create a new user and set password authentication
USERNAME="${login_username}"
PASSWORD="${login_password}"
useradd -m -s /bin/bash $USERNAME
# Set password for the user
echo "$USERNAME:$PASSWORD" | chpasswd
# Allow password authentication in SSH
echo "[+] Updating /etc/ssh/sshd_config to allow password authentication and disable publickey-only auth"
sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
sudo sed -i '/^disable_root:/a ssh_pwauth: true' /etc/cloud/cloud.cfg
sudo cloud-init single --name set-passwords --frequency always
sudo systemctl restart ssh
# Give the user passwordless sudo
usermod -aG sudo $USERNAME
echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$USERNAME
chmod 0440 /etc/sudoers.d/$USERNAME

# Install Ansible
sudo apt-get update -y
sudo apt-get install -y ansible

# Ensure /etc/ansible/hosts exists and add instance's private IP
sudo touch /etc/ansible/hosts
sudo chmod 644 /etc/ansible/hosts
PRIVATE_IP=$(hostname -I | awk '{print $1}')
echo "$PRIVATE_IP ansible_connection=ssh ansible_user=$USERNAME ansible_ssh_pass=$PASSWORD" | sudo tee -a /etc/ansible/hosts



cd ${project_repo_dir} && mvn clean install 
cd /${project_repo_dir}/target && nohup java -jar *.jar & 
echo "[+] User_data script completed successfully"
